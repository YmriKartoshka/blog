<?php

namespace app\models\book;

use Yii;
use yii\db\ActiveRecord;
use yii\db\Expression;
use app\models\Comment;
use app\models\Profile;

/**
 * This is the model class for table "{{%book}}".
 *
 * @property integer $id
 * @property string  $name
 * @property string  $description
 * @property string  $coverImage
 * @property integer $year
 * @property integer $authorId
 * @property integer $genreId
 * @property integer $publish
 * @property integer $creatorId
 * @property string  $createDate
 */
class Book extends ActiveRecord
{
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return '{{%book}}';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [
                [
                    'publish',
                    'creatorId',
                    'authorId',
                    'genreId',
                    'year',
                ],
                'integer',
            ],
            [
                ['createDate'],
                'safe',
            ],
            [
                [
                    'name',
                    'description',
                    'coverImage',
                ],
                'string',
            ],
            [
                ['authorId'],
                'exist',
                'skipOnError'     => true,
                'targetClass'     => Author::class,
                'targetAttribute' => ['authorId' => 'id'],
            ],
            [
                ['genreId'],
                'exist',
                'skipOnError'     => true,
                'targetClass'     => Genre::class,
                'targetAttribute' => ['genreId' => 'id'],
            ],
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id'          => 'ID',
            'name'        => 'Name',
            'description' => 'Description',
            'coverImage'  => 'Cover Image',
            'publish'     => 'Publish',
            'creatorId'   => 'Creator ID',
            'createDate'  => 'Create Date',
        ];
    }

    public function getBclink()
    {
        return $this->hasMany(Bclink::class, ['idBook' => 'id']);
    }

    public function getComment()
    {
        return $this->hasMany(Comment::class, ['id' => 'idComment'])->with('author')->via('bclink');
    }

    public function getAuthor()
    {
        return $this->hasOne(Author::class, ['id' => 'authorId']);
    }

    public function getCreator()
    {
        return $this->hasOne(Profile::class, ['id' => 'creatorId']);
    }

    public function getGenre()
    {
        return $this->hasOne(Genre::class, ['id' => 'genreId']);
    }

    public function getBook($id)
    {
        return $this->findOne($id);
    }

    public function getBooks()
    {
        return $this->find()->orderBy('id')->all();
    }

    public function beforeSave($insert)
    {
        $this->creatorId  = Yii::$app->user->getId();
        $this->createDate = new Expression('now()');
        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }
}
